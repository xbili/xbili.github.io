{"componentChunkName":"component---src-templates-post-js","path":"/shopback-post-mortem","webpackCompilationHash":"8f91c9b3bfd2c5f97905","result":{"data":{"wordpressPost":{"id":"4db6cc13-c16b-590b-99b2-97bb77f990d7","slug":"shopback-post-mortem","title":"ShopBack Post Mortem","content":"<p>Well I didn&#8217;t exactly die in ShopBack, but I&#8217;d want to document what I&#8217;ve experienced from theÂ 3 months spent here. My official end date is next week and I think it&#8217;s the right time to do some reflection (again).</p>\n<p>I like to split what I&#8217;ve learnt into three different categories. Mainly:</p>\n<ol>\n<li>Software Engineering</li>\n<li>Business Operations</li>\n<li>Work Ethics</li>\n</ol>\n<h2>Software Engineering</h2>\n<p>I took up the biggest project so far in my software development career here.Â <strong>Rewriting the entire ShopBack website from near-scratch.Â </strong>The development has exposed me to really complex codebase with messy chunks of code here and there. <em>Managing complexity and scalability</em> is one of the key takeaways from this part of the internship. Writing code that works should not be the main concern as I progress on as a developer. It should eventually lean towards writingÂ <em>scalable code</em>. InÂ my 3 months here, I have been taught the right way to do things, while being forced to deal with the wrong way of doing things at the same time. It contrasts why the correct way is so much better by reading an example of poorly organised code.</p>\n<p>The next step in writing code that scales would beÂ <strong>automated tests.Â </strong>Testing allows developers to deploy with confidence and ensure that new features do not break the existing ones which works. As a frontend engineer, testing is rarely implemented due to the difficulty in testing user interfaces. (I mean seriously, there&#8217;s 1001 ways that a user interacts with your product) The next big project that I took up was to implement an integration test framework for the site I&#8217;ve written. I&#8217;ve spent two or three weeks on this so far and I hope that it could be finished before I leave the company. At least provide some documentation on how the testing framework works.</p>\n<p>Other small improvements I&#8217;ve made as a developer will be my Git skills, familiarising myself more with Vim and most importantly, <strong>code style</strong>. My mentor was really big on writing code that looks pleasing to the eye so I guess it has influenced me. (Not as if my OCD wasn&#8217;t serious enough)</p>\n<p>Some of the main code style mini-practicesÂ that I&#8217;ve taken away:</p>\n<ol>\n<li>No trailing whitespace (Vim tells me about this all the time)</li>\n<li>Newline at the end of the file</li>\n<li>Spaces, not tabs</li>\n<li>Consistent indentation</li>\n<li>Naming conventions</li>\n<li>Follow a style guide (Airbnb JavaScript, PSR etc.)</li>\n<li>(and the list goes on)</li>\n</ol>\n<p>These small mini-practices will affect the way code is written and how other people perceive my programming abilities. I hope I&#8217;ll be able to maintain the same level of code discipline in my school work as well as for future work opportunities.</p>\n<p>Last but not least, understanding the deployment process and how scary things can get. Deploying has always been an exciting process. The DevOps workflow of separating different boxes to perform different functions, such as separating &#8216;feature&#8217;, &#8216;staging&#8217; and &#8216;production&#8217;. These are deployment best practices that cannot be acquired by simply doing personal side projects. NUSMods follows almost the same convention butÂ I&#8217;ve never tried to deploy anything there before.</p>\n<h2>Business Operations</h2>\n<p>Gaining knowledge in this field was not part of my main plan, however there are certain things that are good to know.Â I&#8217;ve been exposed to different ways that the company functions as well as the plans that they have to grow and scale at a fast pace. Mainly via data-driven processes and business operations.</p>\n<p>Of course the secret formula is not to be divulgedÂ here, but gaining exposure in this field really opens up my eyes to how a company works on a lower level.</p>\n<h2>Work Ethics</h2>\n<p>Working in a startup has been really exciting. New features get shipped on a daily basis. There is deployment on every single day and there are always ad-hoc issues to be fixed on the fly while working on improvements to the product at the same time.</p>\n<p>As a result, we constantly work after the standard office hours. Personally, I do not mind working the extra hours since I&#8217;m learning a lot in the process. However I think there should be some lessons learnt in work ethics here as well.</p>\n<p><strong>Over-promising</strong> is a dangerous habit and would more often than not land one into a very bad situation. If something seems unreasonable or unmanageable, it should be brought up and be negotiated with. Furthermore, since there are most likely different teams in a startup, it is also important to manage effective communication. At the end of the day, miscommunication will always lead to time and effort wasted.</p>\n<hr />\n<p>Overall, I have enjoyed my time working for a growing startup that values hard work and passion. In fact I am really thankful for this opportunity and the importantÂ project that was assigned to me. As much as I want to stay for a longer period of time to take on more exciting roles or projects, it&#8217;s time to move on to greater things in life. (CS3216) I plan on touching up on my algorithms once more before the school term starts.</p>\n<p>It&#8217;s been an enriching summer internship and I hope to recharge my batteries over this long weekend before the semesterÂ begins. Happy SG50! ðŸ™‚</p>\n","date":"2015-08-07T20:02:33.000Z"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"shopback-post-mortem"}}}