<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bili Xu</title>
    <description>Bili Xu. Computer Science Undergraduate @ National University of Singapore. Platform Engineer at EasilyDo.
</description>
    <link>http://xbili.com/</link>
    <atom:link href="http://xbili.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 20 Jul 2016 22:41:54 -0700</pubDate>
    <lastBuildDate>Wed, 20 Jul 2016 22:41:54 -0700</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Mature as an engineer, by communicating better</title>
        <description>&lt;p&gt;Since the start of my (very limited) software engineering career, I’ve always strive to become a good engineer. One that follows best practices and write clean and efficient code.&lt;/p&gt;

&lt;p&gt;It is only recently that I realise that the more I try to do so, the more disappointed I get. It is even more difficult when there isn’t an active senior engineer as a mentor. But wait, what exactly is a &lt;em&gt;senior engineer&lt;/em&gt;? Or rather, how does one &lt;strong&gt;earn&lt;/strong&gt; the title of a senior engineer?&lt;/p&gt;

&lt;p&gt;We often talk of a senior engineer as one who has mastery of foundation domain knowledge and enough technical breadth to cover most roles needed in an organization. The ‘do-it-all’ guy who has 6-7 years of engineering experience, who can take ownership of projects and guide junior developers in the correct direction.&lt;/p&gt;

&lt;p&gt;Then I came across &lt;a href=&quot;http://www.kitchensoap.com/2012/10/25/on-being-a-senior-engineer/&quot;&gt;this&lt;/a&gt;. A very concise guide to the traits of being a good senior engineer. One that I strive to work towards.&lt;/p&gt;

&lt;p&gt;However, amidst all the Commandments and traits of a good senior engineer, I noticed they all revolve around a single lifeskill that I am lacking in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Communication&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Learning how to communicate ideas and solutions to both technical and non-technical staff is an essential tool in a senior engineer’s toolbox. Many of the scenarios mentioned in the article are easily solved with adept communication skills.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I’m going to admit that my communication skills need some work&lt;/em&gt;. I can convey my ideas to people, and they could understand me just fine (or so I think, although Regina gets really frustrated when she doesn’t understand me). But when it comes to technical discussions, &lt;strong&gt;I choke all the time&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Only by mastering this lifeskill that I can continue to level up as a developer, and also mature as a developer. C’mon, we all have to grow up and take up responsibilities far more than what we have now.&lt;/p&gt;

&lt;p&gt;But how?&lt;/p&gt;

&lt;p&gt;Starting at work would be a great idea. Put in more thought to how to present my thoughts to others, rather than blabbering whatever comes off my head.&lt;/p&gt;

&lt;p&gt;Here’s to maturing as an engineer. Cheers. :)&lt;/p&gt;
</description>
        <pubDate>Wed, 20 Jul 2016 00:00:00 -0700</pubDate>
        <link>http://xbili.com/2016/07/20/Mature-as-an-engineer-by-communicating-better.html</link>
        <guid isPermaLink="true">http://xbili.com/2016/07/20/Mature-as-an-engineer-by-communicating-better.html</guid>
        
        
      </item>
    
      <item>
        <title>Half-time</title>
        <description>&lt;p&gt;I like to reflect on what I’ve done, what I should’ve done, and what I plan
to do at a certain milestone. Besides, I just gave my mid-term presentation and
my thoughts are still fresh. Time flies really quickly, but I feel it is
important to spend time to look back. I wouldn’t want to risk wasting another
6 more months, only to leave the Valley with regrets.&lt;/p&gt;

&lt;!---excerpt-break--&gt;

&lt;p&gt;I settled in pretty comfortably into my situation, and came to accept that
most of the time, &lt;em&gt;I cannot control the cards I’m dealt with, but I can change
the way I play them&lt;/em&gt;. Coming to Silicon Valley with high expectations of
what a fast growing startup should be (thank you ShopBack), I was a little
disappointed with what I experienced. (Shall not name my company here, although
it isn’t hard to find out)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It is not a bad company, but it is a mature company that does not require
any more backend interns.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Also, the problem with having a remote team is the difference in quality of
work, and the lack of useful work. As a result, most of my time spent are on
simple little projects that doesn’t seem to matter to anyone that much.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I enjoy writing code that leaves a positive impact on people’s lives.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I clearly did not enjoy myself, but I did perform my duties to the best of my
abilities. Perhaps I should have come in with lower expectations of what I can
learn, but that sounds &lt;em&gt;really pessimistic&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;So I did lower my expectations, and made some difference in the way I
approached things. Like Ben said, I’m &lt;em&gt;“trying to create life in a lifeless
land”&lt;/em&gt;. I’m sure it is not that extreme, I tried looking for new ways to find
important work.&lt;/p&gt;

&lt;p&gt;Adapting to my situation here has made me look at things from a different POV.
I would definitely like my situation to be better than what it is right now,
but I shall not complain, because doing so will only take away more time from
the things that actually matter.&lt;/p&gt;

&lt;h2 id=&quot;so-what-are-the-things-that-matter-in-the-next-half&quot;&gt;So what are the things that matter in the next half?&lt;/h2&gt;

&lt;p&gt;I’ve broken them down into three categories:
&lt;strong&gt;academics, New Venture Creation&lt;/strong&gt;, and &lt;strong&gt;personal development&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;academics&quot;&gt;Academics&lt;/h3&gt;

&lt;p&gt;I missed out on taking a CS module in Stanford for my first half, missing out
on a very rare opportunity. Also, going on a year long internship would mean
too long a break from school, and to gain back the rigor that academia
provides, I need to treat my Stanford courses seriously next quarter.&lt;/p&gt;

&lt;p&gt;Machine Learning is on the top of my list, since it will be taught by the
famous Dr Andrew Ng, followed by several Coursera courses such as
Cryptography. Also, relearning Computer Networking is something I had always
wanted to do, since NUS did not really do a good job in teaching me what I had
to know about Networking. Udacity offers a really good course in it, and I’ll
see what I can learn from it.&lt;/p&gt;

&lt;p&gt;Hopefully these courses will allow me to gain back my ability to perform in an
academic environment before I return to Singapore.&lt;/p&gt;

&lt;h3 id=&quot;new-venture-creation-nvc&quot;&gt;New Venture Creation (NVC)&lt;/h3&gt;

&lt;p&gt;This is a module that we all have to do. Come up with a business model and
build a working prototype. Originally I thought this felt very much like
CS3216. But I eventually came to a realisation that in CS3216, we were
encouraged to build an idea that is simply &lt;em&gt;cool&lt;/em&gt;. NVC pushes us to make the
idea &lt;em&gt;profitable&lt;/em&gt; and &lt;em&gt;fundable&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Cool&lt;/em&gt; and &lt;em&gt;profitable&lt;/em&gt; rarely coexist.&lt;/p&gt;

&lt;p&gt;I watched &lt;a href=&quot;https://www.youtube.com/watch?v=dB3Wd00fL3s&quot;&gt;this video&lt;/a&gt; by Jack Ma
recently and it really inspired me. It emphasizes the Chinese value of
‘honor’, and how it can be applied to impact the world.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;As a businessman, the most important decision to determine a company’s
destiny has nothing to do with money.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This has inspired me for my own NVC: &lt;strong&gt;think of building something that really
has an impact on the world, rather than being just profit-making&lt;/strong&gt;. I doubt
many would agree with my overly optimistic point-of-view, since most companies
of such nature close down due to lack of money.&lt;/p&gt;

&lt;h3 id=&quot;personal-development&quot;&gt;Personal Development&lt;/h3&gt;

&lt;p&gt;I’ve bought several books that I wish to finish before I head home. These are
books that stimulate my mind, brings me out of my own little bubble of
software development and broadens my view on certain aspects of life. I do
wish to write a few book reviews about what I read, and share them on this
blog.&lt;/p&gt;

&lt;p&gt;Also, joining a proper gym training programme would be on my list as well. I’m
guilty of not utilizing my 24-Hour Fitness membership. I head to the gym when
I feel like it, not on a &lt;em&gt;very&lt;/em&gt; regular basis. A personal trainer programme
would probably help me solve that problem.&lt;/p&gt;

&lt;p&gt;It has dawned upon me that my hunger for learning isn’t as strong as what it
used to be. Going onto different platforms to learn, and learn fast. That is
what I should be doing in my free time, rather than lazing around. It scares me
how quickly time flies past when I’m lying down on my bed with my mobile phone
on social media.&lt;/p&gt;

&lt;p&gt;I’ve signed up for more courses on Udacity, and Coursera to further broaden my
skillsets, and dive deeper into certain areas.&lt;/p&gt;

&lt;p&gt;This is my plan for the next half, and I hope I’ll achieve what I set out for
before I leave. I need to trigger the hunger for knowledge, and satisfy them
with the wide array of resources that I have at hand.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;**Note that I did not include &lt;em&gt;level up as a developer&lt;/em&gt;. It is a given that I
will always strive to level up as a craftsman. I practise my craft everyday
extensively, exposing myself to many new technologies and concepts. That being
said, it is also time to dive in on how things work, rather than simply knowing
how to glue things together from a higher level.&lt;/p&gt;
</description>
        <pubDate>Fri, 24 Jun 2016 00:00:00 -0700</pubDate>
        <link>http://xbili.com/2016/06/24/Halftime.html</link>
        <guid isPermaLink="true">http://xbili.com/2016/06/24/Halftime.html</guid>
        
        
      </item>
    
      <item>
        <title>Still Suck at Hackathons</title>
        <description>&lt;p&gt;It’s been almost a year since I’ve written. I have grown pretty much as a
developer, and as a person. It has been a really fruitful journey
from developing Letterbox to making my way here in Silicon Valley, and I am
thankful for every part of it.&lt;/p&gt;

&lt;p&gt;Recently I took part in a Bitcoin hackathon organised by Berkeley, and realised
that I still suck at these competitions. There is a constant stress and
pressure on me, with or without teammates. Being the only developer (I joined
with Regina) on the team, there are many expectations to be met.&lt;/p&gt;

&lt;p&gt;Here are a few lessons learnt: &lt;!---excerpt-break--&gt;&lt;/p&gt;

&lt;h2 id=&quot;dont-overestimate-my-abilities&quot;&gt;Don’t overestimate my abilities&lt;/h2&gt;

&lt;p&gt;It first started off with playing around with Facebook’s Relay and GraphQL
together with React Native, and slowly turned into just playing with React
Native, with a very quick Flask setup.&lt;/p&gt;

&lt;p&gt;The thought of putting together a polished, working and quality mobile app
within a night by myself shouldn’t even have appeared in my head. Maybe if I
had another developer working with me, I could delegate and somewhat come up
with a polished product.&lt;/p&gt;

&lt;p&gt;I overestimate my abilities too easily. Remember NUSHello? Yeah, that was a
&lt;strong&gt;total disaster&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;when-working-with-something-new-read-and-expose-myself-extensively&quot;&gt;When working with something new, read and expose myself extensively&lt;/h2&gt;

&lt;p&gt;I was working with React Native for the first time and I did not realize that
Redux could work well with it. I would imagine the ease of simply implementing
reducers, and calling actions. However this did not come into my mind and I
ended up passing props all over the place in Vanilla React.&lt;/p&gt;

&lt;p&gt;This could have easily been avoided by reading, and Googling up about things
like that instead of jumping in.&lt;/p&gt;

&lt;p&gt;But to be fair, I was totally bummed out. It was 12am when I started work on
the client and it was a total mess.&lt;/p&gt;

&lt;h2 id=&quot;find-teammates&quot;&gt;Find teammates&lt;/h2&gt;

&lt;p&gt;I should stop thinking I can do things all by myself. Working with people
is essential in winning hackathons and I need to open myself up to working
with people more often.&lt;/p&gt;

&lt;h2 id=&quot;if-all-else-fails-invision-is-my-best-friend&quot;&gt;If all else fails, Invision is my best friend&lt;/h2&gt;

&lt;p&gt;Regina could design, and I could simply hook them all up with Invision and
pitch with the prototype. But, instead of doing that we slept in and did not
even return to the demo pitch. What a waste.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Always pitch next time!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It was still a great great great experience overall since it was my first time
messing around with mobile development, and I must say that React Native made
things really easy to understand.&lt;/p&gt;

&lt;p&gt;The idea I have in mind shall not be shared in this blog because I would love
to polish it further before revealing any details about it. :)&lt;/p&gt;

&lt;p&gt;Oh and did I mention, Google Code Jam is back. Let’s go solve some algorithm
puzzles!&lt;/p&gt;

</description>
        <pubDate>Wed, 06 Apr 2016 00:00:00 -0700</pubDate>
        <link>http://xbili.com/2016/04/06/Still-Suck-At-Hackathons.html</link>
        <guid isPermaLink="true">http://xbili.com/2016/04/06/Still-Suck-At-Hackathons.html</guid>
        
        
      </item>
    
      <item>
        <title>Git Bisect</title>
        <description>&lt;p&gt;I went into work the other morning with an overdue bug from the previous night and couldn’t find a way to solve it.&lt;/p&gt;

&lt;p&gt;Given the fact that the feature was written weeks ago, I couldn’t remember which commit I broke the code in. Luckily, Josh came up (once more) and showed me this useful tool called &lt;code class=&quot;highlighter-rouge&quot;&gt;git bisect&lt;/code&gt;. &lt;!---excerpt-break--&gt;&lt;/p&gt;

&lt;p&gt;What &lt;code class=&quot;highlighter-rouge&quot;&gt;git bisect&lt;/code&gt; does is it performs a binary search (yeah, O(log n) guys) for the commit that screws things up and you are able to figure out what exactly went wrong.&lt;/p&gt;

&lt;p&gt;So here’s how it works. For a certain file, we start by running:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    git bisect start
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Obviously, something is broken in this current commit, therefore we go with&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    git bisect bad
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;to indicate that the commit is broken.&lt;/p&gt;

&lt;p&gt;Then git will automatically jump to the next commit, which I assume is half of the current range specified. You will be in that commit and you could check your product to see if it’s broken. If it’s all fine and dandy, we go ahead and run:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    git bisect good
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;to indicate that the commit is good.&lt;/p&gt;

&lt;p&gt;We can see how this works. Git keeps a pointer to the front and back of the current search range and slowly performs a binary search until the single commit that you found which broke your code.&lt;/p&gt;

&lt;p&gt;Very useful tool when you couldn’t figure out what broke your code.&lt;/p&gt;

&lt;p&gt;Don’t forget, there’s one last step to make sure your repository doesn’t become a huge ball of mess:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    git bisect reset
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This will reset your repository after finding the broken commit.&lt;/p&gt;

&lt;p&gt;Really really useful!&lt;/p&gt;

</description>
        <pubDate>Sat, 04 Jul 2015 00:00:00 -0700</pubDate>
        <link>http://xbili.com/2015/07/04/Git-Bisect.html</link>
        <guid isPermaLink="true">http://xbili.com/2015/07/04/Git-Bisect.html</guid>
        
        
      </item>
    
      <item>
        <title>Event Delegation</title>
        <description>&lt;p&gt;After finishing my work today, Jacky asked about listening to a dynamically added DOM element in a data table.&lt;/p&gt;

&lt;p&gt;Having learnt event delegation (properly) recently, I was able to explain this with relative ease.&lt;!---excerpt-break--&gt;&lt;/p&gt;

&lt;p&gt;What jQuery selectors do is listen to a DOM element with either a class name or an ID name. But what happens if the class or ID is not created on document load?&lt;/p&gt;

&lt;p&gt;Let’s say we have a &lt;code class=&quot;highlighter-rouge&quot;&gt;table&lt;/code&gt; and we want to select a specific &lt;code class=&quot;highlighter-rouge&quot;&gt;tr&lt;/code&gt; (table row) that was added in dynamically by JavaScript after the document loaded. To put things into perspective:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &amp;lt;table class=&quot;parent&quot;&amp;gt;
        &amp;lt;tr class=&quot;row1&quot;&amp;gt;&amp;lt;/tr&amp;gt;
        &amp;lt;tr class=&quot;row2&quot;&amp;gt;&amp;lt;/tr&amp;gt;
    &amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The two &lt;code class=&quot;highlighter-rouge&quot;&gt;tr&lt;/code&gt;s were dynamically added into the table and it seems like we have no possible way to add an event listener to the DOM element.&lt;/p&gt;

&lt;p&gt;This is where event delegation comes in. We set the event listener on the parent and it listens for any changes on it’s children. And easy way of doing this in jQuery is as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    $(&#39;.parent&#39;).on(&#39;click&#39;, &#39;tr&#39;, function() {
        // Do something with the row
    });
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It is possible to listen to the dynamically added rows in the future since we are listening on the parent element instead.&lt;/p&gt;

&lt;p&gt;Really neat and useful trick! :0&lt;/p&gt;

</description>
        <pubDate>Wed, 10 Jun 2015 00:00:00 -0700</pubDate>
        <link>http://xbili.com/2015/06/10/Event-Delegation.html</link>
        <guid isPermaLink="true">http://xbili.com/2015/06/10/Event-Delegation.html</guid>
        
        
      </item>
    
      <item>
        <title>CSS Positions: Relative and Absolute</title>
        <description>&lt;p&gt;I’ve already spent 2 weeks at ShopBack as a Frontend Engineer intern and came to realise that I still don’t understand CSS well enough. A couple of days ago I was trying to overlay half of an image onto a banner. I found it so difficult to wrap my head around &lt;code class=&quot;highlighter-rouge&quot;&gt;absolute&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;relative&lt;/code&gt; positioning. Josh, our DevOps engineer explained briefly to me how it works and why it works.&lt;!---excerpt-break--&gt;&lt;/p&gt;

&lt;h2 id=&quot;relative&quot;&gt;Relative&lt;/h2&gt;

&lt;p&gt;This is mainly for moving the element left and right. What this does is that it shifts it by x number of pixels from it’s &lt;em&gt;original position&lt;/em&gt;. This still preserves the flow of the document as the element. It does not remove the element from the normal flow.&lt;/p&gt;

&lt;h2 id=&quot;absolute&quot;&gt;Absolute&lt;/h2&gt;

&lt;p&gt;Absolute on the other hand fully removes the element from the flow of the document and has it’s position &lt;em&gt;relative&lt;/em&gt; to the browser, &lt;strong&gt;OR&lt;/strong&gt; it’s offset parent. I have an example for this.&lt;/p&gt;

&lt;p&gt;HTML:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div class=&quot;outer&quot;&amp;gt;
    &amp;lt;div class=&quot;inner&quot;&amp;gt;
        Blah blah blah
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;CSS:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.outer {
    background-color: green;
    position: relative;
    height: 100px;
    width: 400px;
}
.inner {
    background-color: blue;
    position: absolute;
    height: 200px;
    width: 200px;
    top: 50%;
    left: 25%;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This will give me:
&lt;img src=&quot;http://xbili.com/assets/dist/img/030615-1.png&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this case, &lt;code class=&quot;highlighter-rouge&quot;&gt;div.inner&lt;/code&gt; will look for its offset parent, which is &lt;code class=&quot;highlighter-rouge&quot;&gt;div.outer&lt;/code&gt; to apply &lt;code class=&quot;highlighter-rouge&quot;&gt;top&lt;/code&gt;. In this case &lt;code class=&quot;highlighter-rouge&quot;&gt;div.inner&lt;/code&gt; is &lt;strong&gt;relative&lt;/strong&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;div.outer&lt;/code&gt;. If &lt;code class=&quot;highlighter-rouge&quot;&gt;div.outer&lt;/code&gt; did not exist, then &lt;code class=&quot;highlighter-rouge&quot;&gt;div.inner&lt;/code&gt;’s offset parent will be the &lt;code class=&quot;highlighter-rouge&quot;&gt;html&lt;/code&gt;, which is the entire browser window.&lt;/p&gt;

&lt;p&gt;This also affects using percentage for the top, bottom, left, right values. Doing &lt;code class=&quot;highlighter-rouge&quot;&gt;top: 50%;&lt;/code&gt; means you want to shift &lt;code class=&quot;highlighter-rouge&quot;&gt;div.inner&lt;/code&gt; by 50% of &lt;code class=&quot;highlighter-rouge&quot;&gt;div.outer&lt;/code&gt;’s height. Therefore it moves by 50 pixels (half of its offset parent’s height) instead of 100 pixels (half of its own height).&lt;/p&gt;

&lt;p&gt;Pretty neat, hopefully I can explore more CSS in detail next time. Oh, and this blog needs a redesign.&lt;/p&gt;
</description>
        <pubDate>Wed, 03 Jun 2015 00:00:00 -0700</pubDate>
        <link>http://xbili.com/2015/06/03/CSS-Positions-Relative-and-Absolute.html</link>
        <guid isPermaLink="true">http://xbili.com/2015/06/03/CSS-Positions-Relative-and-Absolute.html</guid>
        
        
      </item>
    
      <item>
        <title>I See Boolean Algebra</title>
        <description>&lt;p&gt;Today is one of the rare times that I’m home from school during the semester, all thanks to a very bad flu that I’ve caught. So while staying at home, I overheard a discussion between my parents about how the double switch controlled our home ceiling fan. &lt;!---excerpt-break--&gt;&lt;/p&gt;

&lt;p&gt;After weeks of Computer Organisation class, I decided to put my &lt;em&gt;boolean algebra&lt;/em&gt; skills to the test. Albeit a very easy one.&lt;/p&gt;

&lt;p&gt;So when approaching logic problems, the first step is to always draw out the truth table.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Door Switch&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Toilet Switch&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Fan&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Here we see that the only time that the fan will turn on is if the door switch is &lt;strong&gt;off&lt;/strong&gt; and the toilet switch is &lt;strong&gt;on&lt;/strong&gt;. What can we deduce about this then?&lt;/p&gt;

&lt;p&gt;If we let Door Switch be &lt;strong&gt;A&lt;/strong&gt;, and Toilet Switch be &lt;strong&gt;B&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;minterm&lt;/em&gt; expression of the expression will be &lt;strong&gt;A’.B&lt;/strong&gt;. i.e. &lt;strong&gt;NOT A OR B&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Then I drew out a circuit diagram for the entire logic:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://xbili.com/assets/dist/img/circuit1.jpg&quot; alt=&quot;Circuit Diagram&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Voila!&lt;/strong&gt; There goes some application to what I learnt in real life. I showed this to my dad and he was impressed. (It’s not easy to impress him)&lt;/p&gt;

&lt;p&gt;I don’t know why this mattered so much to me, but the fact that I was able to apply something I learnt in school to somewhere else &lt;strong&gt;excites me&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Feb 2015 00:00:00 -0800</pubDate>
        <link>http://xbili.com/2015/02/01/I-See-Boolean-Algebra.html</link>
        <guid isPermaLink="true">http://xbili.com/2015/02/01/I-See-Boolean-Algebra.html</guid>
        
        
      </item>
    
      <item>
        <title>First Hackathon Thoughts</title>
        <description>&lt;p&gt;I participated in my first hackathon yesterday and even though I did not really build something useful or useless, I built something.&lt;!---excerpt-break--&gt;&lt;/p&gt;

&lt;h1 id=&quot;pimory&quot;&gt;&lt;a href=&quot;http://pimory.herokuapp.com/&quot;&gt;Pimory&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;A friend of mine came up with this idea to build a web version of his &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.mampersat.pimorize&amp;amp;hl=en&quot;&gt;Pimorize&lt;/a&gt;. Originally we were going to do this as a team, but it appears that the idea of staying just to code out the app didn’t appeal to them. So it was left with me, &lt;strong&gt;alone&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;So what does this app do?&lt;/p&gt;

&lt;h2 id=&quot;it-lets-you-memorize-pi-up-to-9999-digits&quot;&gt;It lets you memorize Pi up to 9999 digits.&lt;/h2&gt;

&lt;p&gt;Yes, that’s all. It is a very simple app to code out, and I did so in 12 hours. The problem came when I didn’t know what else to do and fatigue just got the better of me. So I went back to Tembusu for bed. (I need my sleep)&lt;/p&gt;

&lt;p&gt;The tech stack I decided to use was really simple. An ExpressJS server to read the Pi digits from a .txt file and then jQuery for all of my front-end functionalities. The end result was a bunch of spaghetti code, but it works.&lt;/p&gt;

&lt;p&gt;What still bothers me a bit is…
&lt;strong&gt;Why didn’t I use a framework that I’ve learnt&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I’ve learnt two of the mostly used front-end frameworks, Angular and Backbone over the holidays, and I did not even think of using them. Initially I thought I wasn’t very familiar with the frameworks, so I didn’t even try. &lt;strong&gt;Bad idea&lt;/strong&gt;. Since the app idea was so simple, testing it out with frameworks would be the perfect idea.&lt;/p&gt;

&lt;p&gt;But instead of that I opted to use a familiar technology stack. It works, but it’s messy and difficult to extend.&lt;/p&gt;

&lt;p&gt;Through the hackathon, I discovered too that my usage of Bootstrap is still very limited. No idea why is that the case, &lt;em&gt;Bootstrap is really user-friendly&lt;/em&gt;. Maybe it’s still my web fundamentals that are weak.&lt;/p&gt;

&lt;p&gt;Overall, there’s a first-time for everything, and this was my first hackathon. I wouldn’t say it was very successful, considering that I had nothing better to do now that I’m back at Tembusu (readings and problem sets…)&lt;/p&gt;

&lt;p&gt;Till next year’s HacknRoll or the next hackathon, there’s much room for improvement!&lt;/p&gt;

</description>
        <pubDate>Sun, 25 Jan 2015 00:00:00 -0800</pubDate>
        <link>http://xbili.com/2015/01/25/First-Hackathon-Thoughts.html</link>
        <guid isPermaLink="true">http://xbili.com/2015/01/25/First-Hackathon-Thoughts.html</guid>
        
        
      </item>
    
      <item>
        <title>All that I&#39;ve learnt</title>
        <description>&lt;p&gt;I thought that since 2014 is ending, it’ll be good to make a list of things that I’ve learnt in this year. Starting from the very top.&lt;!---excerpt-break--&gt;&lt;/p&gt;

&lt;h1 id=&quot;web-design&quot;&gt;Web Design&lt;/h1&gt;
&lt;p&gt;Needless to say, I’ve done quite a bit of web design this year, starting with the first major project that I had. Ecomore’s corporate website design has taught me valuable lessons about web design. Things like starting with mobile and image optimization. I don’t think there’re any better ways of learning these stuff other than &lt;strong&gt;doing it&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Check out the final product &lt;a href=&quot;http://www.ecomorecorp.com&quot;&gt;here&lt;/a&gt;. I’m still &lt;a href=&quot;https://www.github.com/xbili/ecomore&quot;&gt;working on it&lt;/a&gt;, so do expect a few bugs here and there.&lt;/p&gt;

&lt;h1 id=&quot;angularjs&quot;&gt;AngularJS&lt;/h1&gt;
&lt;p&gt;I’ve picked this up while working on Ecomore. It’s kind of my way of procrastinating. Having learnt Express and Node, I didn’t quite understand what Angular really did. It took me a year to finally grasp the basic concept of Angular, thanks to Code School’s Shaping Up with Angular.&lt;/p&gt;

&lt;p&gt;Basically, Angular is a web framework which organises your JavaScript code on the &lt;em&gt;front-end&lt;/em&gt;. In a way, it’s taking the &lt;strong&gt;V&lt;/strong&gt; and &lt;strong&gt;C&lt;/strong&gt; of &lt;strong&gt;MVC&lt;/strong&gt; to the front-end. Things that makes Angular much more attractive and user friendly would be directives and services. By utilizing attributes/tags in a HTML5 document, your overall app structure looks much, &lt;em&gt;much&lt;/em&gt; neater than a long string of jQuery. :3&lt;/p&gt;

&lt;p&gt;With that, I progressed to working on a small side project that was created by following a tutorial. You could &lt;a href=&quot;https://www.github.com/xbili/xbili-showtrackr&quot;&gt;check it out&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;functional-programming&quot;&gt;Functional Programming&lt;/h1&gt;
&lt;p&gt;All thanks to my module called &lt;strong&gt;CS1101S&lt;/strong&gt;, a &lt;em&gt;SICP inspired introductory programming course&lt;/em&gt;, I’ve been exposed to functional programming in &lt;em&gt;JavaScript&lt;/em&gt;. The new style is mind-boggling, but as the course progressed on, I’ve really taken recursion to be a part of my daily code. Some problems looks much more solvable when we involve recursion. This type of programming methodology would help me with my Algorithm classes next semester. Glad that I scored an &lt;strong&gt;A&lt;/strong&gt; for the module.&lt;/p&gt;

&lt;p&gt;Other than that, I’ve been checking out &lt;strong&gt;Immutable.js&lt;/strong&gt; by &lt;em&gt;Facebook&lt;/em&gt;, and trying to find ways to contribute. But… I don’t quite understand the code, yet. Didn’t take the time to really get down to understanding how does all the code pieces come together.&lt;/p&gt;

&lt;h1 id=&quot;vim&quot;&gt;Vim&lt;/h1&gt;
&lt;p&gt;This code editor has &lt;strong&gt;not&lt;/strong&gt; been part of my toolbox for way too long, and I finally got down to learning it. I found out the best way to do this would be to finish my coding assignments with Vim before copy/pasting it into the online interpreter that we have.&lt;/p&gt;

&lt;p&gt;It worked, and I could use the basic features of Vim very comfortably. Maybe not the advanced Vim ninja stuff yet, but I’ll get to that soon enough.&lt;/p&gt;

&lt;h1 id=&quot;python&quot;&gt;Python&lt;/h1&gt;
&lt;p&gt;I did very little of this, just for the fun of learning. Took the Python course from Codecademy and found that Python really feels like a &lt;em&gt;unicorn&lt;/em&gt;. So clean, yet &lt;em&gt;so powerful&lt;/em&gt;. The neat little scripting skills I picked up from Python would prove itself useful later on.&lt;/p&gt;

&lt;h1 id=&quot;xmlxslepub&quot;&gt;XML/XSL/EPUB&lt;/h1&gt;
&lt;p&gt;After doing &lt;strong&gt;CS1101S&lt;/strong&gt;, I signed up for a 1MC research module, &lt;strong&gt;CS1010R&lt;/strong&gt;. I took up the challenge of translating our &lt;a href=&quot;https://www.comp.nus.edu.sg/~cs1101s/sicp/&quot;&gt;online JavaScript SICP&lt;/a&gt; into EPUB. Yes, it is challenging. It requires me to look into quite a bit on XML/XSL and the EPUB format.&lt;/p&gt;

&lt;p&gt;But as it proves, EPUB is a compression of HTML files, images that you want to include, and several meta-data files. So all it requires from me is to change the XSL to create a EPUB friendly HTML file, and generate the meta-data files.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Generate the meta data files?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Yes, I did it with my newly acquired &lt;strong&gt;Python&lt;/strong&gt; magic. I wrote two neat scripts to generate the &lt;em&gt;table of contents&lt;/em&gt; and &lt;em&gt;content.opf&lt;/em&gt; (a manifest that includes all of the EPUB content).&lt;/p&gt;

&lt;p&gt;The latest update as of today, I got the EPUB file working, but it cannot be run by certain readers, there has to be a problem with some of my file formats as eBook readers can be quite strict when it comes down to EPUB file processing. Also, the styling for the HTML files are not included yet.&lt;/p&gt;

&lt;p&gt;There should be a workaround for this via XSL. This is a work in progress.&lt;/p&gt;

&lt;h1 id=&quot;gitmercurial&quot;&gt;Git/Mercurial&lt;/h1&gt;
&lt;p&gt;Version control is pretty important (duh). I was having a discussion with my dad about version control. Since he works in a broadcasting company, version control is quite important for their systems as well. It was really an “AHA!” moment when I finally could relate to something that was being used in the industry.&lt;/p&gt;

&lt;p&gt;New things I’ve learnt from Git would definitely be &lt;strong&gt;branching&lt;/strong&gt;. Since I’ve been working by myself most of the time, I have never done &lt;code class=&quot;highlighter-rouge&quot;&gt;git branch&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;git merge&lt;/code&gt; before.&lt;/p&gt;

&lt;p&gt;So ever since, I’ve been using Git and GitHub a lot, including my own personal projects. I’ll open up issues on GitHub, and name branches after the issue index. It’s a productive way of getting things done, considering that I’m solving problems piece by piece, one issue at a time.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;That’s almost everything I’ve learnt. It has been a great year, and next year I do want to look more into Algorithms. It’s going to be the next major module I’m taking in university, and one of the most important concept that any CS student should master.&lt;/p&gt;

&lt;p&gt;Also, &lt;strong&gt;Open Source Projects&lt;/strong&gt;. Like I said, I never got down to understanding Immutable.js and contributing to it. So that’s something I would love to look into next year.&lt;/p&gt;

&lt;p&gt;Till then, hope everyone had a great 2014, and here’s to a better 2015!&lt;/p&gt;

</description>
        <pubDate>Sun, 28 Dec 2014 00:00:00 -0800</pubDate>
        <link>http://xbili.com/2014/12/28/all-that-i've-learnt.html</link>
        <guid isPermaLink="true">http://xbili.com/2014/12/28/all-that-i've-learnt.html</guid>
        
        
      </item>
    
      <item>
        <title>APIs with JavaScript</title>
        <description>&lt;p&gt;Finals just ended yesterday with my CS1101S paper, and I dare say it was quite manageable.&lt;/p&gt;

&lt;p&gt;Here’s what I learnt today, using APIs with JavaScript.&lt;/p&gt;

&lt;p&gt;First of all, we all have to learn about &lt;strong&gt;HTTP&lt;/strong&gt; before we talk anything about web programming.&lt;!---excerpt-break--&gt;&lt;/p&gt;

&lt;h2 id=&quot;http-hypertext-transfer-protocol&quot;&gt;HTTP: Hypertext Transfer Protocol&lt;/h2&gt;

&lt;p&gt;HTTP is actually a set of rules for getting something from one place to another. So what are these ‘places’?&lt;/p&gt;

&lt;p&gt;They are split into two types:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Servers: Other computers on the Internet&lt;/li&gt;
  &lt;li&gt;Clients: That’s us.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So when a &lt;em&gt;HTTP request&lt;/em&gt; is made, the request zips through the Internet until it finds the right server to handle that &lt;em&gt;request&lt;/em&gt;. Then the server would send the &lt;em&gt;response&lt;/em&gt; back to you.&lt;/p&gt;

&lt;p&gt;I’ll mention more about this &lt;em&gt;request/response&lt;/em&gt; later on.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Client/Server relationship is a prerequisite of a set of principles called Representational State Transfer (REST)&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What this means is that every link clicked on the webpage would result in a &lt;em&gt;state transition&lt;/em&gt;. Means it simply brings you to the next page, representing the current &lt;em&gt;state&lt;/em&gt; of the application.&lt;/p&gt;

&lt;p&gt;When an application or webpage follow this type of &lt;em&gt;page-to-page&lt;/em&gt; navigation, we start to follow the &lt;em&gt;REST principles&lt;/em&gt;. And we call these applications &lt;strong&gt;RESTful&lt;/strong&gt;. (Finally, this term that is so commonly seen makes sense)&lt;/p&gt;

&lt;p&gt;Right, so we got all of that HTTP stuff settled, let’s move on to find out what are &lt;em&gt;APIs&lt;/em&gt; (yet another commonly heard name all over the Internet)&lt;/p&gt;

&lt;h2 id=&quot;api-application-programming-interface&quot;&gt;API: Application Programming Interface&lt;/h2&gt;

&lt;p&gt;In English, &lt;em&gt;APIs&lt;/em&gt; specifies the ways a program can interact with an application.&lt;/p&gt;

&lt;p&gt;We mentioned about &lt;em&gt;RESTful applications&lt;/em&gt; above, so for an API to be RESTful, it must fulfil certain criterias:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;It has to seperate the &lt;em&gt;client&lt;/em&gt; from the &lt;em&gt;server&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;It cannot &lt;em&gt;hold state&lt;/em&gt; between requests: meaning no information is stored by server from request to request&lt;/li&gt;
  &lt;li&gt;It has to use &lt;em&gt;HTTP&lt;/em&gt; and &lt;em&gt;HTTP methods&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;(There are many other criterias, but for now, these would do)&lt;/p&gt;

&lt;p&gt;Right, I mentioned that I’ll talk more about &lt;em&gt;request/response&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;making-a-request&quot;&gt;Making a REQUEST&lt;/h2&gt;

&lt;p&gt;Here’s the code sample for making a request:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;XMLHttpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;www.blah.com&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Before I go into what these means, we have to know the four verbs of HTTP methods:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;GET&lt;/strong&gt;: &lt;em&gt;retrieves&lt;/em&gt; information form specified source&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;POST&lt;/strong&gt;: &lt;em&gt;sends&lt;/em&gt; new information to specified source&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;PUT&lt;/strong&gt;: &lt;em&gt;updates&lt;/em&gt; exisiting information to specified source&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DELETE&lt;/strong&gt;: &lt;em&gt;removes&lt;/em&gt; existing information from specified source&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These are methods are named really intuitively, I like it.&lt;/p&gt;

&lt;p&gt;Now let’s go into the code:&lt;/p&gt;

&lt;p&gt;First, &lt;code class=&quot;highlighter-rouge&quot;&gt;xhr&lt;/code&gt; stores a new &lt;code class=&quot;highlighter-rouge&quot;&gt;XMLHttpRequest&lt;/code&gt; object, and this object contains various methods.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;open&lt;/code&gt; defines the request, first parameter being the HTTP verb that you’re about to execute, followed by the server, then here’s the last parameter which I still understand quite vaguely. &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt; means that this function will wait until it gets a response from the server. I’ll read more on this.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;send&lt;/code&gt; will then… you guessed it, send the reqeust.&lt;/p&gt;

&lt;p&gt;Within xhr, it will contain certain information about the request. &lt;code class=&quot;highlighter-rouge&quot;&gt;console.log(xhr.statusCode);&lt;/code&gt; will return you the status code of the HTTP request. 
&lt;strong&gt;TODO&lt;/strong&gt;: Read up more about these methods that &lt;code class=&quot;highlighter-rouge&quot;&gt;xhr&lt;/code&gt; contain.&lt;/p&gt;

&lt;h2 id=&quot;parsing-the-response&quot;&gt;Parsing the Response&lt;/h2&gt;

&lt;p&gt;There are two types of responses that the API can return you. Either &lt;em&gt;XML&lt;/em&gt; or &lt;em&gt;JSON&lt;/em&gt;. Read the docs to find out which one the API is providing! So here’s what the response will contain:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Response line: three-digit HTTP code, I wouldn’t write them down here since they are easily ‘Google-able’.&lt;/li&gt;
  &lt;li&gt;Header: this contains further information about server and its response.&lt;/li&gt;
  &lt;li&gt;Body: basically, either &lt;em&gt;XML&lt;/em&gt; or &lt;em&gt;JSON&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Parsing XML&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xmldoc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;responseXML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;With the above code, &lt;code class=&quot;highlighter-rouge&quot;&gt;xmldoc&lt;/code&gt; now contains the XML returned by the server.&lt;/p&gt;

&lt;p&gt;XML stands for E&lt;strong&gt;x&lt;/strong&gt;tensible &lt;strong&gt;M&lt;/strong&gt;arkup &lt;strong&gt;L&lt;/strong&gt;anguage. It’s like HTML, but with all sorts of tags that you create yourself. Now that you have xmldoc, you could easily access items in the response body by applying methods/accessing members of &lt;code class=&quot;highlighter-rouge&quot;&gt;xmldoc&lt;/code&gt;. Still have to read up more about this.&lt;/p&gt;

&lt;p&gt;On the other hand…&lt;/p&gt;

&lt;p&gt;JSON stands for &lt;strong&gt;J&lt;/strong&gt;ava&lt;strong&gt;S&lt;/strong&gt;cript &lt;strong&gt;O&lt;/strong&gt;bject &lt;strong&gt;N&lt;/strong&gt;otation. It’s exactly how you would create a new anonymous JavaScript object.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;new_obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;in JSON would be…&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;c&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I’ve read somewhere that there is no such thing as &lt;code class=&quot;highlighter-rouge&quot;&gt;responseJSON&lt;/code&gt; method for &lt;code class=&quot;highlighter-rouge&quot;&gt;XMLHttpRequest&lt;/code&gt; object, only &lt;code class=&quot;highlighter-rouge&quot;&gt;responseText&lt;/code&gt;. So if the response is not in XML, it should be stored as &lt;code class=&quot;highlighter-rouge&quot;&gt;responseText&lt;/code&gt;. In that case, &lt;code class=&quot;highlighter-rouge&quot;&gt;var jsonDoc = xhr.responseText;&lt;/code&gt; would return you the JSON response body. (I’ll correct this if it’s wrong)&lt;/p&gt;

&lt;p&gt;That’s about all that I learnt for APIs with JavaScript. Most of it was from &lt;a href=&quot;http://www.codecademy.com/courses/javascript-beginner-en-EID4t/0/1&quot;&gt;this&lt;/a&gt; course here by Codecademy. Really learnt quite a bit, despite playing around with APIs for quite a while. I’ll &lt;strong&gt;definitely&lt;/strong&gt; be playing around with a few APIs over the semester break, and let’s see how much can I do with it. :)&lt;/p&gt;

&lt;p&gt;Hope to keep this learning streak going!&lt;/p&gt;

</description>
        <pubDate>Thu, 27 Nov 2014 00:00:00 -0800</pubDate>
        <link>http://xbili.com/2014/11/27/APIs-with-JavaScript.html</link>
        <guid isPermaLink="true">http://xbili.com/2014/11/27/APIs-with-JavaScript.html</guid>
        
        
      </item>
    
  </channel>
</rss>
